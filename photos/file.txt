  if request.method == "POST":
    if os.path.isdir('photos/' + session["email"]):
      app.config['UPLOAD_PATH'] = 'photos/' + session["email"]
      #get the request data
      uploaded_file = request.files["upload"]
      filename = secure_filename(uploaded_file.filename)
      path = "photos/" + session["email"] + "/" + filename
      # file_name = os.path.abspath('/photos/' + session["email"] + "/" + uploaded_file.filename)
      with io.open(path, 'rb') as image_file:
        content = image_file.read();

      image = vision.Image(content=content)

      # Performs label detection on the image file
      response = client.label_detection(image=image)
      labels = response.label_annotations

      tags = []
      for label in labels:
          tags.append(str(label.description))

      print(tags)

      # Performs face detection on the image file
      response = client.face_detection(image=image)
      faces = response.face_annotations

      likelihood_name = ('UNKNOWN', 'VERY_UNLIKELY', 'UNLIKELY', 'POSSIBLE', 'LIKELY', 'VERY_LIKELY')

      moods = []

      for face in faces:
        mood = []
        mood.append('Joy')
        mood.append(likelihood_name.index(likelihood_name[face.joy_likelihood]))
        moods.append(mood)

        mood = []
        mood.append('Sorrow')
        mood.append(likelihood_name.index(likelihood_name[face.sorrow_likelihood]))
        moods.append(mood)

        mood = []
        mood.append('Anger')
        mood.append(likelihood_name.index(likelihood_name[face.anger_likelihood]))
        moods.append(mood)

        mood = []
        mood.append('Surprise')
        mood.append(likelihood_name.index(likelihood_name[face.surprise_likelihood]))
        moods.append(mood)

     # filename = secure_filename(uploaded_file.filename)
      if filename != '':
          file_ext = os.path.splitext(filename)[1]
          if file_ext not in app.config['UPLOAD_EXTENSIONS'] or \
                  file_ext != validate_image(uploaded_file.stream):
              abort(400)
          uploaded_file.save(os.path.join(app.config['UPLOAD_PATH'], filename))
    else:
      os.makedirs('photos/' + session["email"])

